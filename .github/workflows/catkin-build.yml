
name: Catkin CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: [ubuntu-20.04]

    strategy:
      matrix:
        #compiler: ["/usr/bin/g++", "/usr/bin/clang++"]
        compiler: ["/usr/bin/g++"]

    steps:
    - name: 'checkout azure-sdk-for-cpp'
      uses: actions/checkout@v2
      with:
        repository: 'Azure/azure-sdk-for-cpp.git'
        ref: 'azure-storage-blobs_12.2.0'
        path: 'azure-sdk-for-cpp'

    - name: 'build azure-sdk-for-cpp'
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        set -ex

        curl -s https://apt.kitware.com/keys/kitware-archive-latest.asc | sudo apt-key add -
        sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'

        sudo apt-get update -qq
        sudo apt-get install -y libssl-dev libcurl4-openssl-dev cmake g++ uuid-dev cmake
        cd azure-sdk-for-cpp
        mkdir build.release
        cd build.release
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        cmake --build . --parallel
        sudo cmake --install .

    - name: 'checkout rosbaz'
      uses: actions/checkout@v2
      with:
        path: 'src'

    - uses: betwo/github-setup-catkin@master
      with:
        ros-version: 'noetic'
        build-tool: 'catkin_tools'
        workspace: '$GITHUB_WORKSPACE'

    - name: 'build rosbaz'
      run: catkin build -sc --no-status --no-notify -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=RelWithDebInfo

    - name: 'test rosbaz'
      run: catkin run_tests --no-status --no-notify -DREGRESSION_TESTS=ON && catkin_test_results
