
name: Catkin CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: [ubuntu-18.04]

    strategy:
      matrix:
        #compiler: ["/usr/bin/g++", "/usr/bin/clang++"]
        compiler: ["/usr/bin/g++"]

    steps:
    - name: 'checkout azure-storage-cpplite'
      uses: actions/checkout@v2
      with:
        repository: 'Azure/azure-storage-cpplite.git'
        ref: 'v0.3.0'
        path: 'azure-storage-cpplite'

    - name: 'build azure-storage-cpplite'
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        set -ex
        sudo apt-get update -qq
        sudo apt-get install -y libssl-dev libcurl4-openssl-dev cmake g++ uuid-dev
        cd azure-storage-cpplite
        mkdir build.release
        cd build.release
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/azure-storage-cpplite -DBUILD_SHARED_LIBS=ON -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        cmake --build .
        sudo cmake --build . --target install
        echo "/usr/local/azure-storage-cpplite/lib" | sudo tee /etc/ld.so.conf.d/azure-storage-cpplite.conf
        sudo ldconfig

    - name: 'checkout rosbaz'
      uses: actions/checkout@v2
      with:
        path: 'src'

    - uses: janbernloehr/github-setup-catkin@master
      with:
        ros-version: 'melodic'
        workspace: '$GITHUB_WORKSPACE'

    - name: 'build rosbaz'
      run: catkin build -sc --no-status --no-notify -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}

    - name: 'test rosbaz'
      run: catkin run_tests --no-status --no-notify && catkin_test_results

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCUBETOKEN }}
